{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IUser": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"avatar": {
						"type": "string"
					},
					"isEmailVerified": {
						"type": "boolean"
					},
					"role": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"reset_password_token": {
						"type": "string"
					},
					"confirmationCode": {
						"type": "string"
					}
				},
				"required": [
					"firstName",
					"lastName",
					"email",
					"password",
					"isEmailVerified",
					"role",
					"status",
					"reset_password_token",
					"confirmationCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_IUser.Exclude_keyofIUser.isEmailVerified-or-status-or-reset_password_token-or-confirmationCode__": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"avatar": {
						"type": "string"
					},
					"role": {
						"type": "string"
					}
				},
				"required": [
					"firstName",
					"lastName",
					"email",
					"password",
					"role"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_IUser.isEmailVerified-or-status-or-reset_password_token-or-confirmationCode_": {
				"$ref": "#/components/schemas/Pick_IUser.Exclude_keyofIUser.isEmailVerified-or-status-or-reset_password_token-or-confirmationCode__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"ICreateUserDto": {
				"$ref": "#/components/schemas/Omit_IUser.isEmailVerified-or-status-or-reset_password_token-or-confirmationCode_"
			},
			"Pick_CreatedUser.Exclude_keyofCreatedUser.password-or-reset_password_token-or-confirmationCode__": {
				"properties": {
					"isEmailVerified": {
						"type": "boolean"
					},
					"status": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"avatar": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"_id": {
						"type": "string"
					}
				},
				"required": [
					"isEmailVerified",
					"status",
					"firstName",
					"lastName",
					"email",
					"role",
					"_id"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_CreatedUser.password-or-reset_password_token-or-confirmationCode_": {
				"$ref": "#/components/schemas/Pick_CreatedUser.Exclude_keyofCreatedUser.password-or-reset_password_token-or-confirmationCode__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IUserResponse": {
				"$ref": "#/components/schemas/Omit_CreatedUser.password-or-reset_password_token-or-confirmationCode_"
			},
			"Partial_IUser_": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"avatar": {
						"type": "string"
					},
					"isEmailVerified": {
						"type": "boolean"
					},
					"role": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"reset_password_token": {
						"type": "string"
					},
					"confirmationCode": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"CreatedUser": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"avatar": {
						"type": "string"
					},
					"isEmailVerified": {
						"type": "boolean"
					},
					"role": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"reset_password_token": {
						"type": "string"
					},
					"confirmationCode": {
						"type": "string"
					},
					"_id": {
						"type": "string"
					}
				},
				"required": [
					"firstName",
					"lastName",
					"email",
					"password",
					"isEmailVerified",
					"role",
					"status",
					"reset_password_token",
					"confirmationCode",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IConversation": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"messages": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"members": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"_id",
					"name",
					"messages",
					"members"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IConversationMember": {
				"properties": {
					"userId": {
						"type": "string"
					},
					"conversationId": {
						"type": "string"
					},
					"leftTime": {
						"type": "string",
						"format": "date-time"
					},
					"active": {
						"type": "boolean"
					}
				},
				"required": [
					"userId",
					"conversationId",
					"leftTime",
					"active"
				],
				"type": "object",
				"additionalProperties": false
			},
			"mongoose.Types.ObjectId": {
				"type": "string"
			},
			"CreatePayload": {
				"properties": {
					"receiver": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"sender": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"receiver",
					"sender"
				],
				"type": "object"
			},
			"IMessage": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"fromUser": {
						"type": "string"
					},
					"toUser": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"file": {
						"type": "string"
					},
					"messageText": {
						"type": "string"
					},
					"conversationId": {
						"type": "string"
					}
				},
				"required": [
					"_id",
					"fromUser",
					"toUser",
					"type",
					"file",
					"messageText",
					"conversationId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IContact": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"members": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"_id",
					"members"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "chat-app-server",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "tamlv"
		}
	},
	"paths": {
		"/auth/registration": {
			"post": {
				"operationId": "Registration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"user": {
											"$ref": "#/components/schemas/IUser"
										},
										"refreshToken": {
											"type": "string"
										},
										"accessToken": {
											"type": "string"
										}
									},
									"required": [
										"user",
										"accessToken"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ICreateUserDto"
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"user": {
											"$ref": "#/components/schemas/IUser"
										},
										"refreshToken": {
											"type": "string"
										},
										"accessToken": {
											"type": "string"
										}
									},
									"required": [
										"user",
										"refreshToken",
										"accessToken"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"password": {
										"type": "string"
									},
									"email": {
										"type": "string"
									}
								},
								"required": [
									"password",
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/auth/refreshToken/{refreshToken}": {
			"post": {
				"operationId": "Refresh",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"refreshToken": {
											"type": "string"
										},
										"accessToken": {
											"type": "string"
										}
									},
									"required": [
										"refreshToken",
										"accessToken"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "refreshToken",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/confirm/{confirmationCode}": {
			"get": {
				"operationId": "VerifyUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IUser"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "confirmationCode",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IUserResponse"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/user/{userId}": {
			"get": {
				"operationId": "GetOne",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUserResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUserResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_IUser_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUserResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/search/{searchValue}": {
			"get": {
				"operationId": "Search",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/CreatedUser"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "searchValue",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/conversation": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"receiver": {
											"$ref": "#/components/schemas/IConversationMember"
										},
										"sender": {
											"$ref": "#/components/schemas/IConversationMember"
										},
										"conversation": {
											"$ref": "#/components/schemas/IConversation"
										}
									},
									"required": [
										"receiver",
										"sender",
										"conversation"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreatePayload"
							}
						}
					}
				}
			}
		},
		"/conversation/{userId}": {
			"get": {
				"operationId": "GetConversationByUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IConversation"
									},
									"type": "array",
									"nullable": true
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/conversation/{conversationId}": {
			"post": {
				"operationId": "PushMember",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IConversation"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "conversationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/message": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IMessage"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IMessage"
							}
						}
					}
				}
			}
		},
		"/message/{conversationId}": {
			"get": {
				"operationId": "GetMessageByConversation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "conversationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/contact": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IContact"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IContact"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"/contact/user/{userId}": {
			"get": {
				"operationId": "GetContactByUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IContact"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/contact/{contactId}": {
			"get": {
				"operationId": "GetContactById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IContact"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteContact",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IContact"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "contactId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/api"
		}
	]
}